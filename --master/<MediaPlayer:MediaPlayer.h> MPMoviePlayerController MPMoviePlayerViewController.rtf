{\rtf1\ansi\ansicpg936\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 AndaleMono;\f2\fnil\fcharset134 STHeitiSC-Light;
\f3\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red211\green24\blue149;\red128\green128\blue128;\red0\green160\blue255;
\red38\green38\blue38;\red254\green254\blue254;\red103\green103\blue103;\red255\green44\blue56;\red255\green128\blue0;
\red65\green204\blue69;\red120\green109\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww19700\viewh10960\viewkind0
\deftab672
\pard\tx672\pardeftab672\pardirnatural

\f0\fs28 \cf2 \cb3 \CocoaLigature0 @property
\f1 \cf1  
\f0 \cf4 MPMoviePlayerViewController
\f1 \cf1  * movieController;\

\f0 \cf2 @property
\f1 \cf1  
\f0 \cf4 MPMoviePlayerController
\f1 \cf1  * videoController;\
\pard\pardeftab720\fi320\sl544\sa240

\f2\fs32 \cf5 \cb6 \expnd0\expndtw0\kerning0
\CocoaLigature1 \outl0\strokewidth0 \strokec5 \'cf\'c8\'cb\'b5
\f3 MPMoviePlayerController\

\f2 \'ca\'d7\'cf\'c8\'d2\'aa\'b0\'fc\'ba\'ac
\f3 \'a0 #import\'a0 <MediaPlayer/MediaPlayer.h>
\f2 \'cd\'b7\'ce\'c4\'bc\'fe\'ba\'cd
\f3 MediaPlayer.framework
\f2 \'a1\'a3
\f3 \
\'a0- (void)createMPPlayerController:(NSString *)sFileNamePath \{\
\'a0 NSURL *movieURL = [NSURL fileURLWithPath:sFileNamePath];\
\'a0MPMoviePlayerController *movewController =[[MPMoviePlayerController alloc] initWithContentURL:movieURL];\
\'a0[movewController prepareToPlay];\
\'a0[self.view addSubview:movewController.view];// 
\f2 \'c9\'e8\'d6\'c3\'d0\'b4\'d4\'da\'cc\'ed\'bc\'d3\'d6\'ae\'ba\'f3
\f3  \'a0 // 
\f2 \'d5\'e2\'c0\'ef\'ca\'c7
\f3 addSubView\
\'a0movewController.shouldAutoplay=YES;\
\'a0[movewController setControlStyle:MPMovieControlStyleDefault];\
\'a0[movewController setFullscreen:YES];\
\'a0[movewController.view setFrame:self.view.bounds];\
\'a0
\f2 \'d5\'e2\'c0\'ef\'d7\'a2\'b2\'e1\'cf\'e0\'b9\'d8\'b2\'d9\'d7\'f7\'b5\'c4\'cd\'a8\'d6\'aa
\f3 \
\'a0[[ NSNotificationCenter \'a0 defaultCenter ]\'a0 addObserver : self\
\'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0 selector : @selector (movieFinishedCallback:)\
\'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0 name : MPMoviePlayerPlaybackDidFinishNotification\
\'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0 object :moveViewController. movewController ]; //
\f2 \'b2\'a5\'b7\'c5\'cd\'ea\'ba\'f3\'b5\'c4\'cd\'a8\'d6\'aa
\f3 \
\'a0[movewController release];\
\}\
-( void )movieFinishedCallback:( NSNotification *)notify \{\
\'a0 \'a0\'a0 MPMoviePlayerController * theMovie = [notify\'a0 object ];\
\'a0 \'a0 [[ NSNotificationCenter \'a0 defaultCenter ]\'a0 removeObserver : self\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0 name : MPMoviePlayerPlaybackDidFinishNotification\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0 object :theMovie];\
\'a0 \'a0 [theMovie. view \'a0 removeFromSuperview ];\
\'a0 \'a0 [theMovie\'a0 release ];\
\}\
//////////////////////////////// end\
\pard\tx672\pardeftab672\pardirnatural

\f1\fs28 \cf1 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 \outl0\strokewidth0 \
\pard\tx672\pardeftab672\pardirnatural

\f0 \cf4 \cb7 NSString
\f1 \cf1  * strPath = [[
\f0 \cf4 NSBundle
\f1 \cf1  
\f0 \cf4 mainBundle
\f1 \cf1 ]
\f0 \cf4 pathForResource
\f1 \cf1 :
\f0 \cf8 @"gameVideo.mp4"
\f1 \cf1  
\f0 \cf4 ofType
\f1 \cf1 :
\f0 \cf2 nil
\f1 \cf1 ];\
    
\f0 \cf4 NSURL
\f1 \cf1  * url = [
\f0 \cf4 NSURL
\f1 \cf1  
\f0 \cf4 fileURLWithPath
\f1 \cf1 :strPath];\
    
\f0 \cf9 _videoController
\f1 \cf1  = [[
\f0 \cf4 MPMoviePlayerController
\f1 \cf1  
\f0 \cf4 alloc
\f1 \cf1 ]
\f0 \cf4 initWithContentURL
\f1 \cf1 :url];\
    \
    
\f0 \cf9 _videoController
\f1 \cf1 .
\f0 \cf4 movieSourceType
\f1 \cf1  = 
\f0 \cf4 MPMovieSourceTypeFile
\f1 \cf1 ;\
    
\f0 \cf10 //    MPMovieSourceTypeUnknown,
\f1 \cf1 \
    
\f0 \cf10 //    MPMovieSourceTypeFile,     // Local or progressively downloaded network content
\f1 \cf1 \
    
\f0 \cf10 //    MPMovieSourceTypeStreaming
\f1 \cf1 \
\
    
\f0 \cf9 _BGview
\f1 \cf1  = [[
\f0 \cf4 UIView
\f1 \cf1  
\f0 \cf4 alloc
\f1 \cf1 ]
\f0 \cf4 initWithFrame
\f1 \cf1 :
\f0 \cf2 self
\f1 \cf1 .
\f0 \cf4 view
\f1 \cf1 .
\f0 \cf4 frame
\f1 \cf1 ];\
    \
    
\f0 \cf4 UIImageView
\f1 \cf1  * img = [[
\f0 \cf4 UIImageView
\f1 \cf1  
\f0 \cf4 alloc
\f1 \cf1 ]
\f0 \cf4 initWithImage
\f1 \cf1 :[
\f0 \cf4 UIImage
\f1 \cf1  
\f0 \cf4 imageNamed
\f1 \cf1 :
\f0 \cf8 @"firstBG.png"
\f1 \cf1 ]];\
    img.
\f0 \cf4 frame
\f1 \cf1  = 
\f0 \cf9 _BGview
\f1 \cf1 .
\f0 \cf4 frame
\f1 \cf1 ;\
    [
\f0 \cf9 _BGview
\f1 \cf1  
\f0 \cf4 addSubview
\f1 \cf1 :img];\
    \
    [
\f0 \cf9 _videoController
\f1 \cf1  
\f0 \cf4 prepareToPlay
\f1 \cf1 ];\
    \
    
\f0 \cf9 _videoController
\f1 \cf1 .
\f0 \cf4 shouldAutoplay
\f1 \cf1  = 
\f0 \cf2 YES
\f1 \cf1 ;\
    \
    
\f0 \cf9 _videoController
\f1 \cf1 .
\f0 \cf4 controlStyle
\f1 \cf1  =
\f0 \cf4 MPMovieControlStyleNone
\f1 \cf1 ;\
    \
    [
\f0 \cf9 _videoController
\f1 \cf1 .
\f0 \cf4 view
\f1 \cf1  
\f0 \cf4 setFrame
\f1 \cf1 :
\f0 \cf4 CGRectMake
\f1 \cf1 (
\f0 \cf11 20
\f1 \cf1 , 
\f0 \cf11 160
\f1 \cf1 , 
\f0 \cf2 self
\f1 \cf1 .
\f0 \cf4 view
\f1 \cf1 .
\f0 \cf4 bounds
\f1 \cf1 .
\f0 \cf4 size
\f1 \cf1 .
\f0 \cf4 width
\f1 \cf1 -
\f0 \cf11 45
\f1 \cf1 , (
\f0 \cf2 self
\f1 \cf1 .
\f0 \cf4 view
\f1 \cf1 .
\f0 \cf4 bounds
\f1 \cf1 .
\f0 \cf4 size
\f1 \cf1 .
\f0 \cf4 width
\f1 \cf1 -
\f0 \cf11 30
\f1 \cf1 )/
\f0 \cf11 1.39
\f1 \cf1 )];\
    \
    [
\f0 \cf9 _videoController
\f1 \cf1 .
\f0 \cf4 view
\f1 \cf1 .
\f0 \cf4 layer
\f1 \cf1  
\f0 \cf4 setCornerRadius
\f1 \cf1 :
\f0 \cf11 10.0
\f1 \cf1 ];\
    \
    [[
\f0 \cf4 NSNotificationCenter
\f1 \cf1  
\f0 \cf4 defaultCenter
\f1 \cf1 ] 
\f0 \cf4 addObserver
\f1 \cf1 :
\f0 \cf2 self
\f1 \cf1  
\f0 \cf4 selector
\f1 \cf1 :
\f0 \cf2 @selector
\f1 \cf1 (videoEnd) 
\f0 \cf4 name
\f1 \cf1 :
\f0 \cf4 MPMoviePlayerPlaybackDidFinishNotification
\f1 \cf1  
\f0 \cf4 object
\f1 \cf1 :
\f0 \cf2 nil
\f1 \cf1 ];\
    [
\f0 \cf9 _BGview
\f1 \cf1  
\f0 \cf4 addSubview
\f1 \cf1 :
\f0 \cf9 _videoController
\f1 \cf1 .
\f0 \cf4 view
\f1 \cf1 ];\
    \
    \
    
\f0 \cf4 UIImageView
\f1 \cf1  *TVimg = [[
\f0 \cf4 UIImageView
\f1 \cf1  
\f0 \cf4 alloc
\f1 \cf1 ]
\f0 \cf4 initWithImage
\f1 \cf1 :[
\f0 \cf4 UIImage
\f1 \cf1  
\f0 \cf4 imageNamed
\f1 \cf1 :
\f0 \cf8 @"tv.png"
\f1 \cf1 ]];\
    TVimg.
\f0 \cf4 frame
\f1 \cf1  = 
\f0 \cf4 CGRectMake
\f1 \cf1 (-
\f0 \cf11 20
\f1 \cf1 , 
\f0 \cf9 _videoController
\f1 \cf1 .
\f0 \cf4 view
\f1 \cf1 .
\f0 \cf4 bounds
\f1 \cf1 .
\f0 \cf4 size
\f1 \cf1 .
\f0 \cf4 height
\f1 \cf1 -
\f0 \cf9 _BGview
\f1 \cf1 .
\f0 \cf4 bounds
\f1 \cf1 .
\f0 \cf4 size
\f1 \cf1 .
\f0 \cf4 width
\f1 \cf1 /
\f0 \cf11 0.78
\f1 \cf1 , 
\f0 \cf9 _BGview
\f1 \cf1 .
\f0 \cf4 bounds
\f1 \cf1 .
\f0 \cf4 size
\f1 \cf1 .
\f0 \cf4 width
\f1 \cf1 , 
\f0 \cf9 _BGview
\f1 \cf1 .
\f0 \cf4 bounds
\f1 \cf1 .
\f0 \cf4 size
\f1 \cf1 .
\f0 \cf4 width
\f1 \cf1 /
\f0 \cf11 0.75
\f1 \cf1 );\
    \
    [
\f0 \cf9 _videoController
\f1 \cf1 .
\f0 \cf4 view
\f1 \cf1  
\f0 \cf4 addSubview
\f1 \cf1 :TVimg];\
    \
    
\f0 \cf4 UIImageView
\f1 \cf1  * headView = [[
\f0 \cf4 UIImageView
\f1 \cf1  
\f0 \cf4 alloc
\f1 \cf1 ]
\f0 \cf4 initWithImage
\f1 \cf1 :[
\f0 \cf4 UIImage
\f1 \cf1  
\f0 \cf4 imageNamed
\f1 \cf1 :
\f0 \cf8 @"head.png"
\f1 \cf1 ]];\
    headView.
\f0 \cf4 frame
\f1 \cf1  = 
\f0 \cf4 CGRectMake
\f1 \cf1 (
\f0 \cf9 _videoController
\f1 \cf1 .
\f0 \cf4 view
\f1 \cf1 .
\f0 \cf4 bounds
\f1 \cf1 .
\f0 \cf4 size
\f1 \cf1 .
\f0 \cf4 width
\f1 \cf1 -
\f0 \cf11 80
\f1 \cf1 , 
\f0 \cf9 _videoController
\f1 \cf1 .
\f0 \cf4 view
\f1 \cf1 .
\f0 \cf4 frame
\f1 \cf1 .
\f0 \cf4 size
\f1 \cf1 .
\f0 \cf4 height
\f1 \cf1 -
\f0 \cf11 80
\f1 \cf1 , 
\f0 \cf11 80
\f1 \cf1 , 
\f0 \cf11 80
\f1 \cf1 );\
    [
\f0 \cf9 _videoController
\f1 \cf1 .
\f0 \cf4 view
\f1 \cf1  
\f0 \cf4 addSubview
\f1 \cf1 :headView];\
    \
    \
    [
\f0 \cf2 self
\f1 \cf1 .
\f0 \cf4 view
\f1 \cf1  
\f0 \cf4 addSubview
\f1 \cf1 :
\f0 \cf9 _BGview
\f1 \cf1 ];\cb1 \
\pard\tx672\pardeftab672\pardirnatural
\cf1 \cb3 \
\
\pard\pardeftab720\fi320\sl544\sa240

\f3\fs32 \cf5 \cb6 \expnd0\expndtw0\kerning0
\CocoaLigature1 \outl0\strokewidth0 \strokec5 MPMoviePlayerViewController
\f2 \'a1\'a3
\f3 \'a0\

\f2 \'d7\'a2\'d2\'e2\'a3\'ba
\f3 MPMoviePlayerViewController 
\f2 \'b1\'d8\'d0\'eb
\f3  \'a0 presentMoviePlayerViewControllerAnimated
\f2 \'b7\'bd\'ca\'bd\'cc\'ed\'bc\'d3\'a3\'ac\'b7\'f1\'d4\'f2
\f3 Done
\f2 \'b0\'b4\'c5\'a5\'ca\'c7\'b2\'bb\'bb\'e1\'cf\'ec\'d3\'a6\'cd\'a8\'d6\'aa
\f3 MPMoviePlayerPlaybackDidFinishNotification
\f2 \'ca\'c2\'bc\'fe\'b5\'c4\'a3\'bb
\f3 \
- ( void )createMPPlayerController:( NSString \'a0*)sFileNamePath \{\
\'a0 \'a0\'a0 MPMoviePlayerViewController \'a0*moviePlayer =[[ MPMoviePlayerViewController\'a0 alloc ]\'a0 initWithContentURL :[ NSURL \'a0 fileURLWithPath :sFileNamePath]];\
\'a0 \'a0 [moviePlayer. moviePlayer \'a0 prepareToPlay ];\
\'a0 \'a0 [ self \'a0 presentMoviePlayerViewControllerAnimated :moviePlayer];\'a0// 
\f2 \'d5\'e2\'c0\'ef\'ca\'c7
\f3 presentMoviePlayerViewControllerAnimated\
\'a0 \'a0 [moviePlayer. moviePlayer \'a0 setControlStyle : MPMovieControlStyleFullscreen ];\
\'a0 \'a0 [moviePlayer. view \'a0 setBackgroundColor :[ UIColor \'a0 clearColor ]];\
\'a0 \'a0 [moviePlayer. view \'a0 setFrame : self . view . bounds ];\
\'a0 \'a0 [[ NSNotificationCenter \'a0 defaultCenter ]\'a0 addObserver : self\
\'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0 selector : @selector (movieFinishedCallback:)\
\'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0 name : MPMoviePlayerPlaybackDidFinishNotification\
\'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0 object :moviePlayer. moviePlayer ];\
\'a0 \'a0 [moviePlayer\'a0 release ];\
\}\
-( void )movieStateChangeCallback:( NSNotification *)notify\'a0 \{\
\'a0 \'a0//
\f2 \'b5\'e3\'bb\'f7\'b2\'a5\'b7\'c5\'c6\'f7\'d6\'d0\'b5\'c4\'b2\'a5\'b7\'c5
\f3 / 
\f2 \'d4\'dd\'cd\'a3\'b0\'b4\'c5\'a5\'cf\'ec\'d3\'a6\'b5\'c4\'cd\'a8\'d6\'aa
\f3 \
\}\
-( void )movieFinishedCallback:( NSNotification *)notify\{\
\'a0 \'a0// 
\f2 \'ca\'d3\'c6\'b5\'b2\'a5\'b7\'c5\'cd\'ea\'bb\'f2\'d5\'df\'d4\'da
\f3 presentMoviePlayerViewControllerAnimated
\f2 \'cf\'c2\'b5\'c4
\f3 Done
\f2 \'b0\'b4\'c5\'a5\'b1\'bb\'b5\'e3\'bb\'f7\'cf\'ec\'d3\'a6\'b5\'c4\'cd\'a8\'d6\'aa\'a1\'a3
\f3 \
\'a0 \'a0\'a0 MPMoviePlayerController * theMovie = [notify\'a0 object ];\
\'a0 \'a0 [[ NSNotificationCenter \'a0 defaultCenter ]\'a0 removeObserver : self\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0 name : MPMoviePlayerPlaybackDidFinishNotification\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0 object :theMovie];\
\'a0 \'a0 [ self \'a0 dismissMoviePlayerViewControllerAnimated ];\
\}\

\f2 \'d2\'d4\'cf\'c2\'ca\'c7\'d7\'ca\'c1\'cf
\f3 \
\'a0moviePlayer.moviewControlMode = MPMovieControlModeDefault;\
\'a0MPMovieControlModeDefault\'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0 
\f2 \'cf\'d4\'ca\'be\'b2\'a5\'b7\'c5
\f3  / 
\f2 \'d4\'dd\'cd\'a3\'a1\'a2\'d2\'f4\'c1\'bf\'ba\'cd\'ca\'b1\'bc\'e4\'bf\'d8\'d6\'c6
\f3 \
\'a0MPMovieControlModeVolumeOnly \'a0 \'a0 \'a0 \'a0\'a0 
\f2 \'d6\'bb\'cf\'d4\'ca\'be\'d2\'f4\'c1\'bf\'bf\'d8\'d6\'c6
\f3 \
\'a0MPMovieControlModeHidden \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0 
\f2 \'c3\'bb\'d3\'d0\'bf\'d8\'d6\'c6\'c6\'f7
\f3 \
\'a0moviePlayer.scallingMode = MPMovieScallingModeAspectFit;\
\'a0 
\f2 \'c4\'e3\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3\'cf\'c2\'c1\'d0\'bf\'ed\'b8\'df\'b1\'c8\'d6\'b5\'a3\'ba
\f3 \
\'a0MPMovieScallingModeNone\'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0 
\f2 \'b2\'bb\'d7\'f6\'c8\'ce\'ba\'ce\'cb\'f5\'b7\'c5
\f3 \
\'a0MPMovieScallingModeAspectFit \'a0 \'a0 \'a0\'a0 
\f2 \'ca\'ca\'d3\'a6\'c6\'c1\'c4\'bb\'b4\'f3\'d0\'a1\'a3\'ac\'b1\'a3\'b3\'d6\'bf\'ed\'b8\'df\'b1\'c8
\f3 \
\'a0MPMovieScallingModeAspectFill\'a0 \'a0 \'a0\'a0 
\f2 \'ca\'ca\'d3\'a6\'c6\'c1\'c4\'bb\'b4\'f3\'d0\'a1\'a3\'ac\'b1\'a3\'b3\'d6\'bf\'ed\'b8\'df\'b1\'c8\'a3\'ac\'bf\'c9\'b2\'c3\'bc\'f4
\f3 \
\'a0MPMovieScallingModeFill\'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0 
\f2 \'b3\'e4\'c2\'fa\'c6\'c1\'c4\'bb\'a3\'ac\'b2\'bb\'b1\'a3\'b3\'d6\'bf\'ed\'b8\'df\'b1\'c8
\f3 \
\'a0MPMoviePlayerContentPreloadDidFinishNotification\
\'a0 
\f2 \'b5\'b1\'b5\'e7\'d3\'b0\'b2\'a5\'b7\'c5\'c6\'f7\'bd\'e1\'ca\'f8\'b6\'d4\'c4\'da\'c8\'dd\'b5\'c4\'d4\'a4\'bc\'d3\'d4\'d8\'ba\'f3\'b7\'a2\'b3\'f6\'a1\'a3\'d2\'f2\'ce\'aa\'c4\'da\'c8\'dd\'bf\'c9\'d2\'d4\'d4\'da\'bd\'f6\'bc\'d3\'d4\'d8\'c1\'cb\'d2\'bb\'b2\'bf\'b7\'d6\'b5\'c4\'c7\'e9\'bf\'f6\'cf\'c2\'b2\'a5\'b7\'c5\'a3\'ac\'cb\'f9\'d2\'d4\'d5\'e2\'b8\'f6\'cd\'a8\'d6\'aa\'bf\'c9\'c4\'dc\'d4\'da\'d2\'d1\'be\'ad\'b2\'a5\'b7\'c5\'ba\'f3\'b2\'c5\'b7\'a2\'b3\'f6\'a1\'a3
\f3 \
\'a0MPMoviePlayerScallingModeDidChangedNotification\
\'a0 
\f2 \'b5\'b1\'d3\'c3\'bb\'a7\'b8\'c4\'b1\'e4\'c1\'cb\'b5\'e7\'d3\'b0\'b5\'c4\'cb\'f5\'b7\'c5\'c4\'a3\'ca\'bd\'ba\'f3\'b7\'a2\'b3\'f6\'a1\'a3\'d3\'c3\'bb\'a7\'bf\'c9\'d2\'d4\'b5\'e3\'b4\'a5\'cb\'f5\'b7\'c5\'cd\'bc\'b1\'ea\'a3\'ac\'d4\'da\'c8\'ab\'c6\'c1\'b2\'a5\'b7\'c5\'ba\'cd\'b4\'b0\'bf\'da\'b2\'a5\'b7\'c5\'d6\'ae\'bc\'e4\'c7\'d0\'bb\'bb\'a1\'a3
\f3 \
\'a0MPMoviePlayerPlaybackDidFinishNotification\
\'a0 
\f2 \'b5\'b1\'b5\'e7\'d3\'b0\'b2\'a5\'b7\'c5\'cd\'ea\'b1\'cf\'bb\'f2\'d5\'df\'d3\'c3\'bb\'a7\'b0\'b4\'cf\'c2\'c1\'cb
\f3  Done 
\f2 \'b0\'b4\'c5\'a5\'ba\'f3\'b7\'a2\'b3\'f6\'a1\'a3
\f3 \
\pard\tx672\pardeftab672\pardirnatural

\f1\fs28 \cf1 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 \outl0\strokewidth0 \
\
\
\
\
}